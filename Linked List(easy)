/**
* Definition for singly-linked list.
* struct ListNode {
* int val;
* struct ListNode *next;
* };
*/
struct ListNode* reverseList(struct ListNode* head) {
struct ListNode *prev = NULL;
struct ListNode *curr = head;
struct ListNode *next = NULL;
while (curr != NULL) {
next = curr->next;
curr->next = prev;
prev = curr;
curr = next;
}
return prev;
}
char* listToString(struct ListNode* head) {
int count = 0;
struct ListNode* temp = head;
while (temp != NULL) {
count++;
temp = temp->next;
}
char* output = (char*)malloc((count * 4 + 3) * sizeof(char));
if (output == NULL) {
fprintf(stderr, "Memory allocation failed\n");
exit(EXIT_FAILURE);
}
output[0] = '[';
output[1] = '\0';
while (head != NULL) {
char num[5];
sprintf(num, "%d", head->val);
strcat(output, num);
if (head->next != NULL)
strcat(output, ",");
head = head->next;
}
strcat(output, "]");
return output;
}
